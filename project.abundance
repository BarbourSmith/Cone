{
    "atomType": "Molecule",
    "name": "Cone",
    "x": 0,
    "y": 0,
    "uniqueID": 1720830741397,
    "ioValues": [
        {
            "name": "Min",
            "ioValue": 0.1
        },
        {
            "name": "Max",
            "ioValue": 10
        },
        {
            "name": "Angle",
            "ioValue": 60
        }
    ],
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": 1720830750358,
            "ioValues": [
                {
                    "name": "number or geometry",
                    "ioValue": 1720830823787
                }
            ]
        },
        {
            "atomType": "Input",
            "name": "Min",
            "x": 0.013333333333333334,
            "y": 0.31197771587743733,
            "uniqueID": 1720830758174,
            "ioValues": []
        },
        {
            "atomType": "Input",
            "name": "Max",
            "x": 0.013333333333333334,
            "y": 0.5236768802228412,
            "uniqueID": 1720830774323,
            "ioValues": []
        },
        {
            "atomType": "Input",
            "name": "Angle",
            "x": 0.013333333333333334,
            "y": 0.6740947075208913,
            "uniqueID": 1720830782009,
            "ioValues": []
        },
        {
            "atomType": "Circle",
            "name": "Circle",
            "x": 0.17923280423280424,
            "y": 0.5515320334261838,
            "uniqueID": 1720830791507,
            "ioValues": [
                {
                    "name": "diameter",
                    "ioValue": 10
                }
            ]
        },
        {
            "atomType": "Circle",
            "name": "Circle",
            "x": 0.1607142857142857,
            "y": 0.30919220055710306,
            "uniqueID": 1720830797481,
            "ioValues": [
                {
                    "name": "diameter",
                    "ioValue": 0.1
                }
            ]
        },
        {
            "atomType": "Move",
            "name": "Move",
            "x": 0.30158730158730157,
            "y": 0.23119777158774377,
            "uniqueID": 1720830808011,
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": 1720830797481
                },
                {
                    "name": "xDist",
                    "ioValue": 0
                },
                {
                    "name": "yDist",
                    "ioValue": 0
                },
                {
                    "name": "zDist",
                    "ioValue": 4.34
                }
            ]
        },
        {
            "atomType": "Loft",
            "name": "Loft",
            "x": 0.43187830687830686,
            "y": 0.42896935933147634,
            "uniqueID": 1720830823787,
            "ioValues": [
                {
                    "name": "3D shape 1",
                    "ioValue": 1720830791507
                },
                {
                    "name": "3D shape 2",
                    "ioValue": 1720830808011
                },
                {
                    "name": "3D shape 3",
                    "ioValue": ""
                },
                {
                    "name": "3D shape 1",
                    "ioValue": 1720830791507
                },
                {
                    "name": "3D shape 2",
                    "ioValue": 1720830808011
                },
                {
                    "name": "3D shape 3",
                    "ioValue": ""
                }
            ],
            "closedSelection": 0
        },
        {
            "atomType": "Equation",
            "name": "L*math.Tan(A)",
            "x": 0.3062169312169312,
            "y": 0.7520891364902507,
            "uniqueID": 1720830880089,
            "ioValues": [
                {
                    "name": "L",
                    "ioValue": 1
                },
                {
                    "name": "m",
                    "ioValue": 1
                },
                {
                    "name": "a",
                    "ioValue": 1
                },
                {
                    "name": "t",
                    "ioValue": 1
                },
                {
                    "name": "h",
                    "ioValue": 1
                },
                {
                    "name": "T",
                    "ioValue": 1
                },
                {
                    "name": "n",
                    "ioValue": 1
                },
                {
                    "name": "A",
                    "ioValue": 1
                }
            ],
            "currentEquation": "L*math.Tan(A)"
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.208994708994709,
            "y": 0.83008356545961,
            "uniqueID": 1720831313806,
            "ioValues": [
                {
                    "name": "input1",
                    "ioValue": 10
                },
                {
                    "name": "height",
                    "ioValue": 10
                }
            ],
            "codeVersion": 1,
            "code": "//Inputs:[input1, height];\n\nlet shape = drawRectangle(5,7)\n\nconst newPlane = new Plane().pivot(0, 'Y');\n\n return { geometry: [shape.sketchOnPlane(newPlane).extrude(7)], tags: [],\n      color: '#A3CE5B',\n      plane: newPlane}\n\n\n    /**\n    To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n    If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n    Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n    https://replicad.xyz/docs/introapp/UserGuide.html \n    Return a replicad object that includes geometry, color, tags and plane. \n\n\n    Example Code Atom:\n\n      Inputs:[shape, x];\n\n      let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n\n      return 25;\n\n      - See more examples at _______ \n\n\n    */\n"
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "number or geometry",
            "ap2Name": "diameter",
            "ap2Primary": false,
            "ap1ID": 1720830758174,
            "ap2ID": 1720830797481
        },
        {
            "ap1Name": "number or geometry",
            "ap2Name": "diameter",
            "ap2Primary": false,
            "ap1ID": 1720830774323,
            "ap2ID": 1720830791507
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "3D shape 1",
            "ap2Primary": false,
            "ap1ID": 1720830791507,
            "ap2ID": 1720830823787
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap2Primary": true,
            "ap1ID": 1720830797481,
            "ap2ID": 1720830808011
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "3D shape 2",
            "ap2Primary": false,
            "ap1ID": 1720830808011,
            "ap2ID": 1720830823787
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap2Primary": false,
            "ap1ID": 1720830823787,
            "ap2ID": 1720830750358
        }
    ],
    "unitsKey": "MM",
    "fileTypeVersion": 1,
    "compiledBom": [],
    "filetypeVersion": 1
}